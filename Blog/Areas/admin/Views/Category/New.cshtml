@using Blog.Areas.admin.ViewModels
@model Blog.Areas.admin.ViewModels.CategoryNew

<h1>New Category</h1>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <div class="form-group">
        @Html.LabelFor(f => f.Name)
        @Html.TextBoxFor(f => f.Name, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(f => f.Slug)
        @Html.TextBoxFor(f => f.Slug, new { @class = "form-control", data_slug = "#Name" })
    </div>

    <div class="form-group">
        @Html.LabelFor(f => f.Description)
        @Html.TextAreaFor(f => f.Description, new { @class = "form-control"})
    </div>

    <div class="form-group">        
        @Html.LabelFor(f => f.Parent)
        @DisplayMenuSelect(Model)
    </div>
       
    <input type="submit" value="Create Category" class="btn btn-primary" />
    <a href="@Url.Action("Index")">or Cancel</a>

}

@helper DisplayMenuSelect(CategoryNew category)
{    
    <select class="form-control" name="Parent">
        <option value="0">None</option>                
        @foreach (var cat in category.Categories)
        {
            if (cat.Parent == 0)
            {
                if (category.Parent == cat.Id)
                {
                    <option value="@cat.Id" selected="selected">@cat.Name</option>
                }
                else
                {
                    <option value="@cat.Id">@cat.Name</option>
                }
                @DisplaySubMenuSelect((int)cat.Id, category, 1)
            }
        }                
    </select>        
}

@helper DisplaySubMenuSelect(int id, CategoryNew category, int level = 1)
{
    string rowPerfix = string.Empty;

    foreach (var cat in category.Categories)
    {
        if (cat.Parent != 0 && id == cat.Parent)
        {
            for (int i = 0; i < level; i++)
            {
                rowPerfix += "— ";
            }
            if (category.Parent == cat.Id)
            {
                <option value="@cat.Id" selected="selected">@rowPerfix@cat.Name</option>
            }
            else
            {
                <option value="@cat.Id">@rowPerfix@cat.Name</option>
            }

            level++;
            @DisplaySubMenuSelect((int)cat.Id, category, level)
            level = level - 1;
            rowPerfix = string.Empty;
        }

    }
}
