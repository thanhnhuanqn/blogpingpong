@model Blog.Areas.admin.ViewModels.PostsForm

<h1>@(Model.IsNew ? "Create Post " : "Update Posts")</h1>

@using (Html.BeginForm("Form", "Posts"))
{
    if (!Model.IsNew)
    {
        @Html.HiddenFor(f => f.PostId)
    }
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-8">
            <div class="form-group">
                @Html.LabelFor(f => f.Title)
                @Html.TextBoxFor(f => f.Title, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(f => f.Slug)
                @Html.TextBoxFor(f => f.Slug, new { @class = "form-control", data_slug = "#Title" })
            </div>
            <div class="form-group">
                @Html.LabelFor(f => f.Content)
                @Html.TextAreaFor(f => f.Content, new { @class = "form-control" })
            </div>
        </div>        
        <div class="col-lg-4">
            <div class="row">
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">Post Actions</div>
                        <div class="panel-body">
                            <input type="submit" value="@(Model.IsNew ? "Publish Post" : "Update Posts")" class="btn btn-primary btn-success btn-sm" />
                            <a href="@Url.Action("Index")"> or cancel</a>
                        </div>
                    </div>
                                  
                    <div class="panel panel-default">
                        <div class="panel-heading">Categories</div>                        
                        <ul class="list-group">            
                            @for (var i = 0; i < Model.Categories.Count; i++)
                            {
                                <li class="list-group-item">
                                    @Html.Hidden("Categories[" + i + "].id", Model.Categories[i].Id)                                          
                                        @Html.CheckBox("Categories[" + i + "].IsChecked", Model.Categories[i].IsChecked)
                                        @Model.Categories[i].Name                                        
                                </li>
                            }
                        </ul>                        
                    </div>      
                                  
                    <div class="panel panel-info">
                        <div class="panel-heading">Tags</div>
                        <div class="panel-body post-tag-editor">
                            <label for="new-tag-name">New tag:</label>
                            <div class="input-group">
                                <input id="new-tag-name" type="text" class="new-tag-name form-control" />
                                <span class="input-group-btn">
                                    <button disabled="disabled" class="btn btn-primary add-tag-button">Add</button>
                                </span>
                            </div>

                            <ul class="tag-select">
                                <li class="template">
                                    <a href="#" class="name"></a>
                                    <input type="hidden" class="name-input" />
                                    <input type="hidden" class="selected-input" />
                                </li>
                                @for (var i = 0; i < Model.Tags.Count; i++)
                                {
                                    var tag = Model.Tags[i];
                                    <li data-tag-id="@tag.Id" class="@(tag.IsChecked ? "selected" : "")">
                                        <a href="#">@tag.Name</a>
                                        <input type="hidden" name="Tags[@(i)].Id" value="@tag.Id" />
                                        <input type="hidden" name="Tags[@(i)].Name" value="@tag.Name" />
                                        <input type="hidden" name="Tags[@(i)].IsChecked" value="@tag.IsChecked.ToString()" class="selected-input" />
                                    </li>

                                }
                            </ul>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script src="~/Areas/admin/Scripts/PostEditor.js"></script>
    @Scripts.Render("~/bundles/ckeditor")
    <script>
        $(function () {
            CKEDITOR.replace('Content', {
                filebrowserWindowWidth: 800,
                filebrowserWindowHeight: 600
            });
        });
    </script>
}
<script src="~/Areas/admin/Scripts/ckfinder/ckfinder.js"></script>
<script src="~/Areas/admin/Scripts/ckeditor/ckeditor.js"></script>