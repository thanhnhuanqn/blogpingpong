@using Blog.Models
@model Blog.Areas.admin.ViewModels.PostsForm

@{
    ViewBag.Title = "Edit page " + @Model.Title;
}
<br />
<h1>Edit post</h1>
<div class="row">
    @using (Html.BeginForm())
    {
        @AntiForgery.GetHtml()
        @Html.ValidationSummary(true)
        @Html.Hidden("Id", Model.Id)

        <div class="col-md-9">
            @Html.ValidationSummary(true)
            <div class="form-group">
                @Html.LabelFor(f => f.Title)
                @Html.TextBoxFor(f => f.Title, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(f => f.Slug)
                @Html.TextBoxFor(f => f.Slug, new { @class = "form-control", data_slug = "#Title" })
            </div>

            <div class="form-group">
                @Html.LabelFor(f => f.Excerpt)
                @Html.TextAreaFor(f => f.Excerpt, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(f => f.Content)
                @Html.TextAreaFor(f => f.Content, new { @class = "form-control" })
            </div>


            <div class="form-group">
                @Html.LabelFor(f => f.Keyword)
                @Html.TextBoxFor(f => f.Keyword, new { @class = "form-control" })
            </div>

            <div class="form-group ">
                <label></label>
                <div>
                    <input class="btn btn-primary" type="submit" value="Update" />
                    <a href="javascript: history.back(1)">or Cancel</a>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="accordion-container">
                <h4>Publish</h4>
                <div id="visibilityPost" class="form-group">                                        
                    @DisplayMonth(Model.Month)
                    <input type="text" value="@Model.Day" name="Day" style="width:20px;" />,
                    <input type="text" value="@Model.Year" name="Year" style="width:35px;" /> @@
                    <input type="text" value="@Model.Hour" name="Hour" style="width:20px;" /> :
                    <input type="text" value="@Model.Minutes" name="Minutes" style="width:20px;" />                    
                </div>
                <div id="statusPost" class="form-group">
                    @SelectStatus(Model.Status)
                </div>
            </div>
        </div>
    }
</div>
@section scripts{
    @Scripts.Render("~/bundles/ckeditor")
    <script>
        $(function () {
            CKEDITOR.replace('Content', {
                filebrowserWindowWidth: 800,
                filebrowserWindowHeight: 600
            });
        });
    </script>
}

@helper SelectStatus(string status = null)
{
string publish = string.Empty;
string draft = string.Empty;
string pedding = string.Empty;

if (status != null)
{
    if (status.Equals("publish"))
    {
        publish = "selected";
    }
    else if (status.Equals("draft"))
    {
        draft = "selected";
    }
    else if (status.Equals("pedding"))
    {
        pedding = "selected";
    }
}
    <select name="Status" class="form-control">
        <option @publish value="publish">Publish</option>
        <option @draft value="draft">Draft</option>
        <option @pedding value="pedding">Pedding Review</option>
    </select>
}

@helper DisplayMonth(int monthEdit = 0, string classCss = "")
{
var month = DateTime.Now.ToString("MM");
var selected = string.Empty;
var value = string.Empty;
    <select name="month" id="month" class="@classCss">
        @for (var i = 1; i <= 12; i++)
        {
            string name = string.Empty;
            switch (i)
            {
                case 1:
                    name = "Jan"; break;
                case 2:
                    name = "Feb"; break;
                case 3:
                    name = "Mar"; break;
                case 4:
                    name = "Apr"; break;
                case 5:
                    name = "May"; break;
                case 6:
                    name = "Jun"; break;
                case 7:
                    name = "Jul"; break;
                case 8:
                    name = "Aug"; break;
                case 9:
                    name = "Sep"; break;
                case 10:
                    name = "Oct"; break;
                case 11:
                    name = "Nov"; break;
                case 12:
                    name = "Dec"; break;

            }
            value = (i < 10) ? "0" + i : i.ToString();
            //selected = (month == value && monthEdit == value.AsInt()) ? "selected" : (monthEdit == value.AsInt()) ? "selected" : string.Empty;
            if (month == value && monthEdit == value.AsInt())
            {
                selected = "selected";
            }
            else if (monthEdit == value.AsInt())
            {
                selected = "selected";
            }
            else
            {
                selected = string.Empty;
            }
            <option @selected value="@value">@value-@name</option>
        }
    </select>
}